// Code generated by go-swagger; DO NOT EDIT.

package activity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetRecentActivitiesReader is a Reader for the GetRecentActivities structure.
type GetRecentActivitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecentActivitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRecentActivitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRecentActivitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRecentActivitiesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetRecentActivitiesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRecentActivitiesOK creates a GetRecentActivitiesOK with default headers values
func NewGetRecentActivitiesOK() *GetRecentActivitiesOK {
	return &GetRecentActivitiesOK{}
}

/*GetRecentActivitiesOK handles this case with default header values.

A successful request.
*/
type GetRecentActivitiesOK struct {
}

func (o *GetRecentActivitiesOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/recent.json][%d] getRecentActivitiesOK ", 200)
}

func (o *GetRecentActivitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRecentActivitiesBadRequest creates a GetRecentActivitiesBadRequest with default headers values
func NewGetRecentActivitiesBadRequest() *GetRecentActivitiesBadRequest {
	return &GetRecentActivitiesBadRequest{}
}

/*GetRecentActivitiesBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetRecentActivitiesBadRequest struct {
}

func (o *GetRecentActivitiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/recent.json][%d] getRecentActivitiesBadRequest ", 400)
}

func (o *GetRecentActivitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRecentActivitiesUnauthorized creates a GetRecentActivitiesUnauthorized with default headers values
func NewGetRecentActivitiesUnauthorized() *GetRecentActivitiesUnauthorized {
	return &GetRecentActivitiesUnauthorized{}
}

/*GetRecentActivitiesUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetRecentActivitiesUnauthorized struct {
}

func (o *GetRecentActivitiesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/recent.json][%d] getRecentActivitiesUnauthorized ", 401)
}

func (o *GetRecentActivitiesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRecentActivitiesConflict creates a GetRecentActivitiesConflict with default headers values
func NewGetRecentActivitiesConflict() *GetRecentActivitiesConflict {
	return &GetRecentActivitiesConflict{}
}

/*GetRecentActivitiesConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetRecentActivitiesConflict struct {
}

func (o *GetRecentActivitiesConflict) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/recent.json][%d] getRecentActivitiesConflict ", 409)
}

func (o *GetRecentActivitiesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
