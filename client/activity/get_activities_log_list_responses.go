// Code generated by go-swagger; DO NOT EDIT.

package activity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetActivitiesLogListReader is a Reader for the GetActivitiesLogList structure.
type GetActivitiesLogListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivitiesLogListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivitiesLogListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetActivitiesLogListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetActivitiesLogListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetActivitiesLogListConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivitiesLogListOK creates a GetActivitiesLogListOK with default headers values
func NewGetActivitiesLogListOK() *GetActivitiesLogListOK {
	return &GetActivitiesLogListOK{}
}

/*GetActivitiesLogListOK handles this case with default header values.

A successful request.
*/
type GetActivitiesLogListOK struct {
}

func (o *GetActivitiesLogListOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/list.json][%d] getActivitiesLogListOK ", 200)
}

func (o *GetActivitiesLogListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesLogListBadRequest creates a GetActivitiesLogListBadRequest with default headers values
func NewGetActivitiesLogListBadRequest() *GetActivitiesLogListBadRequest {
	return &GetActivitiesLogListBadRequest{}
}

/*GetActivitiesLogListBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetActivitiesLogListBadRequest struct {
}

func (o *GetActivitiesLogListBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/list.json][%d] getActivitiesLogListBadRequest ", 400)
}

func (o *GetActivitiesLogListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesLogListUnauthorized creates a GetActivitiesLogListUnauthorized with default headers values
func NewGetActivitiesLogListUnauthorized() *GetActivitiesLogListUnauthorized {
	return &GetActivitiesLogListUnauthorized{}
}

/*GetActivitiesLogListUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetActivitiesLogListUnauthorized struct {
}

func (o *GetActivitiesLogListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/list.json][%d] getActivitiesLogListUnauthorized ", 401)
}

func (o *GetActivitiesLogListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesLogListConflict creates a GetActivitiesLogListConflict with default headers values
func NewGetActivitiesLogListConflict() *GetActivitiesLogListConflict {
	return &GetActivitiesLogListConflict{}
}

/*GetActivitiesLogListConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetActivitiesLogListConflict struct {
}

func (o *GetActivitiesLogListConflict) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/list.json][%d] getActivitiesLogListConflict ", 409)
}

func (o *GetActivitiesLogListConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
