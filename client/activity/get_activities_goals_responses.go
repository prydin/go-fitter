// Code generated by go-swagger; DO NOT EDIT.

package activity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetActivitiesGoalsReader is a Reader for the GetActivitiesGoals structure.
type GetActivitiesGoalsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivitiesGoalsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivitiesGoalsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetActivitiesGoalsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetActivitiesGoalsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetActivitiesGoalsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivitiesGoalsOK creates a GetActivitiesGoalsOK with default headers values
func NewGetActivitiesGoalsOK() *GetActivitiesGoalsOK {
	return &GetActivitiesGoalsOK{}
}

/*GetActivitiesGoalsOK handles this case with default header values.

A successful request.
*/
type GetActivitiesGoalsOK struct {
}

func (o *GetActivitiesGoalsOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/goals/{period}.json][%d] getActivitiesGoalsOK ", 200)
}

func (o *GetActivitiesGoalsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesGoalsBadRequest creates a GetActivitiesGoalsBadRequest with default headers values
func NewGetActivitiesGoalsBadRequest() *GetActivitiesGoalsBadRequest {
	return &GetActivitiesGoalsBadRequest{}
}

/*GetActivitiesGoalsBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetActivitiesGoalsBadRequest struct {
}

func (o *GetActivitiesGoalsBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/goals/{period}.json][%d] getActivitiesGoalsBadRequest ", 400)
}

func (o *GetActivitiesGoalsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesGoalsUnauthorized creates a GetActivitiesGoalsUnauthorized with default headers values
func NewGetActivitiesGoalsUnauthorized() *GetActivitiesGoalsUnauthorized {
	return &GetActivitiesGoalsUnauthorized{}
}

/*GetActivitiesGoalsUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetActivitiesGoalsUnauthorized struct {
}

func (o *GetActivitiesGoalsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/goals/{period}.json][%d] getActivitiesGoalsUnauthorized ", 401)
}

func (o *GetActivitiesGoalsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesGoalsConflict creates a GetActivitiesGoalsConflict with default headers values
func NewGetActivitiesGoalsConflict() *GetActivitiesGoalsConflict {
	return &GetActivitiesGoalsConflict{}
}

/*GetActivitiesGoalsConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetActivitiesGoalsConflict struct {
}

func (o *GetActivitiesGoalsConflict) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/goals/{period}.json][%d] getActivitiesGoalsConflict ", 409)
}

func (o *GetActivitiesGoalsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
