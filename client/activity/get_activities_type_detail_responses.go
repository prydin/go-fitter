// Code generated by go-swagger; DO NOT EDIT.

package activity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetActivitiesTypeDetailReader is a Reader for the GetActivitiesTypeDetail structure.
type GetActivitiesTypeDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivitiesTypeDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivitiesTypeDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetActivitiesTypeDetailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetActivitiesTypeDetailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetActivitiesTypeDetailConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivitiesTypeDetailOK creates a GetActivitiesTypeDetailOK with default headers values
func NewGetActivitiesTypeDetailOK() *GetActivitiesTypeDetailOK {
	return &GetActivitiesTypeDetailOK{}
}

/*GetActivitiesTypeDetailOK handles this case with default header values.

A successful request.
*/
type GetActivitiesTypeDetailOK struct {
}

func (o *GetActivitiesTypeDetailOK) Error() string {
	return fmt.Sprintf("[GET /1/activities/{activity-id}.json][%d] getActivitiesTypeDetailOK ", 200)
}

func (o *GetActivitiesTypeDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTypeDetailBadRequest creates a GetActivitiesTypeDetailBadRequest with default headers values
func NewGetActivitiesTypeDetailBadRequest() *GetActivitiesTypeDetailBadRequest {
	return &GetActivitiesTypeDetailBadRequest{}
}

/*GetActivitiesTypeDetailBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetActivitiesTypeDetailBadRequest struct {
}

func (o *GetActivitiesTypeDetailBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/activities/{activity-id}.json][%d] getActivitiesTypeDetailBadRequest ", 400)
}

func (o *GetActivitiesTypeDetailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTypeDetailUnauthorized creates a GetActivitiesTypeDetailUnauthorized with default headers values
func NewGetActivitiesTypeDetailUnauthorized() *GetActivitiesTypeDetailUnauthorized {
	return &GetActivitiesTypeDetailUnauthorized{}
}

/*GetActivitiesTypeDetailUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetActivitiesTypeDetailUnauthorized struct {
}

func (o *GetActivitiesTypeDetailUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/activities/{activity-id}.json][%d] getActivitiesTypeDetailUnauthorized ", 401)
}

func (o *GetActivitiesTypeDetailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTypeDetailConflict creates a GetActivitiesTypeDetailConflict with default headers values
func NewGetActivitiesTypeDetailConflict() *GetActivitiesTypeDetailConflict {
	return &GetActivitiesTypeDetailConflict{}
}

/*GetActivitiesTypeDetailConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetActivitiesTypeDetailConflict struct {
}

func (o *GetActivitiesTypeDetailConflict) Error() string {
	return fmt.Sprintf("[GET /1/activities/{activity-id}.json][%d] getActivitiesTypeDetailConflict ", 409)
}

func (o *GetActivitiesTypeDetailConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
