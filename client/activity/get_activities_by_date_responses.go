// Code generated by go-swagger; DO NOT EDIT.

package activity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetActivitiesByDateReader is a Reader for the GetActivitiesByDate structure.
type GetActivitiesByDateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivitiesByDateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivitiesByDateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetActivitiesByDateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetActivitiesByDateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetActivitiesByDateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivitiesByDateOK creates a GetActivitiesByDateOK with default headers values
func NewGetActivitiesByDateOK() *GetActivitiesByDateOK {
	return &GetActivitiesByDateOK{}
}

/*GetActivitiesByDateOK handles this case with default header values.

A successful request.
*/
type GetActivitiesByDateOK struct {
}

func (o *GetActivitiesByDateOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/date/{date}.json][%d] getActivitiesByDateOK ", 200)
}

func (o *GetActivitiesByDateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesByDateBadRequest creates a GetActivitiesByDateBadRequest with default headers values
func NewGetActivitiesByDateBadRequest() *GetActivitiesByDateBadRequest {
	return &GetActivitiesByDateBadRequest{}
}

/*GetActivitiesByDateBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetActivitiesByDateBadRequest struct {
}

func (o *GetActivitiesByDateBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/date/{date}.json][%d] getActivitiesByDateBadRequest ", 400)
}

func (o *GetActivitiesByDateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesByDateUnauthorized creates a GetActivitiesByDateUnauthorized with default headers values
func NewGetActivitiesByDateUnauthorized() *GetActivitiesByDateUnauthorized {
	return &GetActivitiesByDateUnauthorized{}
}

/*GetActivitiesByDateUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetActivitiesByDateUnauthorized struct {
}

func (o *GetActivitiesByDateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/date/{date}.json][%d] getActivitiesByDateUnauthorized ", 401)
}

func (o *GetActivitiesByDateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesByDateConflict creates a GetActivitiesByDateConflict with default headers values
func NewGetActivitiesByDateConflict() *GetActivitiesByDateConflict {
	return &GetActivitiesByDateConflict{}
}

/*GetActivitiesByDateConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetActivitiesByDateConflict struct {
}

func (o *GetActivitiesByDateConflict) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/date/{date}.json][%d] getActivitiesByDateConflict ", 409)
}

func (o *GetActivitiesByDateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
