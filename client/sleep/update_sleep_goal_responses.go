// Code generated by go-swagger; DO NOT EDIT.

package sleep

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateSleepGoalReader is a Reader for the UpdateSleepGoal structure.
type UpdateSleepGoalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSleepGoalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateSleepGoalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewUpdateSleepGoalUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateSleepGoalForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateSleepGoalOK creates a UpdateSleepGoalOK with default headers values
func NewUpdateSleepGoalOK() *UpdateSleepGoalOK {
	return &UpdateSleepGoalOK{}
}

/*UpdateSleepGoalOK handles this case with default header values.

Successful request.
*/
type UpdateSleepGoalOK struct {
}

func (o *UpdateSleepGoalOK) Error() string {
	return fmt.Sprintf("[POST /1.2/user/-/sleep/goal.json][%d] updateSleepGoalOK ", 200)
}

func (o *UpdateSleepGoalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSleepGoalUnauthorized creates a UpdateSleepGoalUnauthorized with default headers values
func NewUpdateSleepGoalUnauthorized() *UpdateSleepGoalUnauthorized {
	return &UpdateSleepGoalUnauthorized{}
}

/*UpdateSleepGoalUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type UpdateSleepGoalUnauthorized struct {
}

func (o *UpdateSleepGoalUnauthorized) Error() string {
	return fmt.Sprintf("[POST /1.2/user/-/sleep/goal.json][%d] updateSleepGoalUnauthorized ", 401)
}

func (o *UpdateSleepGoalUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSleepGoalForbidden creates a UpdateSleepGoalForbidden with default headers values
func NewUpdateSleepGoalForbidden() *UpdateSleepGoalForbidden {
	return &UpdateSleepGoalForbidden{}
}

/*UpdateSleepGoalForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type UpdateSleepGoalForbidden struct {
}

func (o *UpdateSleepGoalForbidden) Error() string {
	return fmt.Sprintf("[POST /1.2/user/-/sleep/goal.json][%d] updateSleepGoalForbidden ", 403)
}

func (o *UpdateSleepGoalForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
