// Code generated by go-swagger; DO NOT EDIT.

package sleep

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetSleepByDateRangeReader is a Reader for the GetSleepByDateRange structure.
type GetSleepByDateRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSleepByDateRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSleepByDateRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSleepByDateRangeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSleepByDateRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSleepByDateRangeOK creates a GetSleepByDateRangeOK with default headers values
func NewGetSleepByDateRangeOK() *GetSleepByDateRangeOK {
	return &GetSleepByDateRangeOK{}
}

/*GetSleepByDateRangeOK handles this case with default header values.

Successful request.
*/
type GetSleepByDateRangeOK struct {
}

func (o *GetSleepByDateRangeOK) Error() string {
	return fmt.Sprintf("[GET /1.2/user/-/sleep/date/{base-date}/{end-date}.json][%d] getSleepByDateRangeOK ", 200)
}

func (o *GetSleepByDateRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSleepByDateRangeUnauthorized creates a GetSleepByDateRangeUnauthorized with default headers values
func NewGetSleepByDateRangeUnauthorized() *GetSleepByDateRangeUnauthorized {
	return &GetSleepByDateRangeUnauthorized{}
}

/*GetSleepByDateRangeUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetSleepByDateRangeUnauthorized struct {
}

func (o *GetSleepByDateRangeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1.2/user/-/sleep/date/{base-date}/{end-date}.json][%d] getSleepByDateRangeUnauthorized ", 401)
}

func (o *GetSleepByDateRangeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSleepByDateRangeForbidden creates a GetSleepByDateRangeForbidden with default headers values
func NewGetSleepByDateRangeForbidden() *GetSleepByDateRangeForbidden {
	return &GetSleepByDateRangeForbidden{}
}

/*GetSleepByDateRangeForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetSleepByDateRangeForbidden struct {
}

func (o *GetSleepByDateRangeForbidden) Error() string {
	return fmt.Sprintf("[GET /1.2/user/-/sleep/date/{base-date}/{end-date}.json][%d] getSleepByDateRangeForbidden ", 403)
}

func (o *GetSleepByDateRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
