// Code generated by go-swagger; DO NOT EDIT.

package body_and_weight

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAddWeightLogParams creates a new AddWeightLogParams object
// with the default values initialized.
func NewAddWeightLogParams() *AddWeightLogParams {
	var ()
	return &AddWeightLogParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddWeightLogParamsWithTimeout creates a new AddWeightLogParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddWeightLogParamsWithTimeout(timeout time.Duration) *AddWeightLogParams {
	var ()
	return &AddWeightLogParams{

		timeout: timeout,
	}
}

// NewAddWeightLogParamsWithContext creates a new AddWeightLogParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddWeightLogParamsWithContext(ctx context.Context) *AddWeightLogParams {
	var ()
	return &AddWeightLogParams{

		Context: ctx,
	}
}

// NewAddWeightLogParamsWithHTTPClient creates a new AddWeightLogParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddWeightLogParamsWithHTTPClient(client *http.Client) *AddWeightLogParams {
	var ()
	return &AddWeightLogParams{
		HTTPClient: client,
	}
}

/*AddWeightLogParams contains all the parameters to send to the API endpoint
for the add weight log operation typically these are written to a http.Request
*/
type AddWeightLogParams struct {

	/*Date
	  Log entry date in the format yyyy-MM-dd.

	*/
	Date strfmt.Date
	/*Time
	  Time of the measurement; hours and minutes in the format of HH:mm:ss, which is set to the last second of the day if not provided.

	*/
	Time *string
	/*Weight
	  Weight in the format of X.XX.

	*/
	Weight int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add weight log params
func (o *AddWeightLogParams) WithTimeout(timeout time.Duration) *AddWeightLogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add weight log params
func (o *AddWeightLogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add weight log params
func (o *AddWeightLogParams) WithContext(ctx context.Context) *AddWeightLogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add weight log params
func (o *AddWeightLogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add weight log params
func (o *AddWeightLogParams) WithHTTPClient(client *http.Client) *AddWeightLogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add weight log params
func (o *AddWeightLogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDate adds the date to the add weight log params
func (o *AddWeightLogParams) WithDate(date strfmt.Date) *AddWeightLogParams {
	o.SetDate(date)
	return o
}

// SetDate adds the date to the add weight log params
func (o *AddWeightLogParams) SetDate(date strfmt.Date) {
	o.Date = date
}

// WithTime adds the time to the add weight log params
func (o *AddWeightLogParams) WithTime(time *string) *AddWeightLogParams {
	o.SetTime(time)
	return o
}

// SetTime adds the time to the add weight log params
func (o *AddWeightLogParams) SetTime(time *string) {
	o.Time = time
}

// WithWeight adds the weight to the add weight log params
func (o *AddWeightLogParams) WithWeight(weight int64) *AddWeightLogParams {
	o.SetWeight(weight)
	return o
}

// SetWeight adds the weight to the add weight log params
func (o *AddWeightLogParams) SetWeight(weight int64) {
	o.Weight = weight
}

// WriteToRequest writes these params to a swagger request
func (o *AddWeightLogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param date
	qrDate := o.Date
	qDate := qrDate.String()
	if qDate != "" {
		if err := r.SetQueryParam("date", qDate); err != nil {
			return err
		}
	}

	if o.Time != nil {

		// query param time
		var qrTime string
		if o.Time != nil {
			qrTime = *o.Time
		}
		qTime := qrTime
		if qTime != "" {
			if err := r.SetQueryParam("time", qTime); err != nil {
				return err
			}
		}

	}

	// query param weight
	qrWeight := o.Weight
	qWeight := swag.FormatInt64(qrWeight)
	if qWeight != "" {
		if err := r.SetQueryParam("weight", qWeight); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
