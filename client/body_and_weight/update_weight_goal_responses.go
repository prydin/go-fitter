// Code generated by go-swagger; DO NOT EDIT.

package body_and_weight

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateWeightGoalReader is a Reader for the UpdateWeightGoal structure.
type UpdateWeightGoalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateWeightGoalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateWeightGoalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewUpdateWeightGoalCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateWeightGoalBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateWeightGoalUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateWeightGoalOK creates a UpdateWeightGoalOK with default headers values
func NewUpdateWeightGoalOK() *UpdateWeightGoalOK {
	return &UpdateWeightGoalOK{}
}

/*UpdateWeightGoalOK handles this case with default header values.

A successful request.
*/
type UpdateWeightGoalOK struct {
}

func (o *UpdateWeightGoalOK) Error() string {
	return fmt.Sprintf("[POST /1/user/-/body/log/weight/goal.json][%d] updateWeightGoalOK ", 200)
}

func (o *UpdateWeightGoalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWeightGoalCreated creates a UpdateWeightGoalCreated with default headers values
func NewUpdateWeightGoalCreated() *UpdateWeightGoalCreated {
	return &UpdateWeightGoalCreated{}
}

/*UpdateWeightGoalCreated handles this case with default header values.

The request has been fulfilled and resulted in a new resouce being created.
*/
type UpdateWeightGoalCreated struct {
}

func (o *UpdateWeightGoalCreated) Error() string {
	return fmt.Sprintf("[POST /1/user/-/body/log/weight/goal.json][%d] updateWeightGoalCreated ", 201)
}

func (o *UpdateWeightGoalCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWeightGoalBadRequest creates a UpdateWeightGoalBadRequest with default headers values
func NewUpdateWeightGoalBadRequest() *UpdateWeightGoalBadRequest {
	return &UpdateWeightGoalBadRequest{}
}

/*UpdateWeightGoalBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type UpdateWeightGoalBadRequest struct {
}

func (o *UpdateWeightGoalBadRequest) Error() string {
	return fmt.Sprintf("[POST /1/user/-/body/log/weight/goal.json][%d] updateWeightGoalBadRequest ", 400)
}

func (o *UpdateWeightGoalBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateWeightGoalUnauthorized creates a UpdateWeightGoalUnauthorized with default headers values
func NewUpdateWeightGoalUnauthorized() *UpdateWeightGoalUnauthorized {
	return &UpdateWeightGoalUnauthorized{}
}

/*UpdateWeightGoalUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type UpdateWeightGoalUnauthorized struct {
}

func (o *UpdateWeightGoalUnauthorized) Error() string {
	return fmt.Sprintf("[POST /1/user/-/body/log/weight/goal.json][%d] updateWeightGoalUnauthorized ", 401)
}

func (o *UpdateWeightGoalUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
