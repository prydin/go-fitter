// Code generated by go-swagger; DO NOT EDIT.

package body_and_weight

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUpdateBodyFatGoalParams creates a new UpdateBodyFatGoalParams object
// with the default values initialized.
func NewUpdateBodyFatGoalParams() *UpdateBodyFatGoalParams {
	var ()
	return &UpdateBodyFatGoalParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateBodyFatGoalParamsWithTimeout creates a new UpdateBodyFatGoalParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateBodyFatGoalParamsWithTimeout(timeout time.Duration) *UpdateBodyFatGoalParams {
	var ()
	return &UpdateBodyFatGoalParams{

		timeout: timeout,
	}
}

// NewUpdateBodyFatGoalParamsWithContext creates a new UpdateBodyFatGoalParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateBodyFatGoalParamsWithContext(ctx context.Context) *UpdateBodyFatGoalParams {
	var ()
	return &UpdateBodyFatGoalParams{

		Context: ctx,
	}
}

// NewUpdateBodyFatGoalParamsWithHTTPClient creates a new UpdateBodyFatGoalParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateBodyFatGoalParamsWithHTTPClient(client *http.Client) *UpdateBodyFatGoalParams {
	var ()
	return &UpdateBodyFatGoalParams{
		HTTPClient: client,
	}
}

/*UpdateBodyFatGoalParams contains all the parameters to send to the API endpoint
for the update body fat goal operation typically these are written to a http.Request
*/
type UpdateBodyFatGoalParams struct {

	/*Fat
	  Target body fat percentage; in the format X.XX.

	*/
	Fat string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update body fat goal params
func (o *UpdateBodyFatGoalParams) WithTimeout(timeout time.Duration) *UpdateBodyFatGoalParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update body fat goal params
func (o *UpdateBodyFatGoalParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update body fat goal params
func (o *UpdateBodyFatGoalParams) WithContext(ctx context.Context) *UpdateBodyFatGoalParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update body fat goal params
func (o *UpdateBodyFatGoalParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update body fat goal params
func (o *UpdateBodyFatGoalParams) WithHTTPClient(client *http.Client) *UpdateBodyFatGoalParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update body fat goal params
func (o *UpdateBodyFatGoalParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFat adds the fat to the update body fat goal params
func (o *UpdateBodyFatGoalParams) WithFat(fat string) *UpdateBodyFatGoalParams {
	o.SetFat(fat)
	return o
}

// SetFat adds the fat to the update body fat goal params
func (o *UpdateBodyFatGoalParams) SetFat(fat string) {
	o.Fat = fat
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateBodyFatGoalParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param fat
	qrFat := o.Fat
	qFat := qrFat
	if qFat != "" {
		if err := r.SetQueryParam("fat", qFat); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
