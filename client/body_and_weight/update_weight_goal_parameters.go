// Code generated by go-swagger; DO NOT EDIT.

package body_and_weight

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUpdateWeightGoalParams creates a new UpdateWeightGoalParams object
// with the default values initialized.
func NewUpdateWeightGoalParams() *UpdateWeightGoalParams {
	var ()
	return &UpdateWeightGoalParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateWeightGoalParamsWithTimeout creates a new UpdateWeightGoalParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateWeightGoalParamsWithTimeout(timeout time.Duration) *UpdateWeightGoalParams {
	var ()
	return &UpdateWeightGoalParams{

		timeout: timeout,
	}
}

// NewUpdateWeightGoalParamsWithContext creates a new UpdateWeightGoalParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateWeightGoalParamsWithContext(ctx context.Context) *UpdateWeightGoalParams {
	var ()
	return &UpdateWeightGoalParams{

		Context: ctx,
	}
}

// NewUpdateWeightGoalParamsWithHTTPClient creates a new UpdateWeightGoalParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateWeightGoalParamsWithHTTPClient(client *http.Client) *UpdateWeightGoalParams {
	var ()
	return &UpdateWeightGoalParams{
		HTTPClient: client,
	}
}

/*UpdateWeightGoalParams contains all the parameters to send to the API endpoint
for the update weight goal operation typically these are written to a http.Request
*/
type UpdateWeightGoalParams struct {

	/*StartDate
	  Weight goal start date; in the format yyyy-MM-dd.

	*/
	StartDate string
	/*StartWeight
	  Weight goal start weight; in the format X.XX, in the unit systems that corresponds to the Accept-Language header provided.

	*/
	StartWeight string
	/*Weight
	  Weight goal target weight; in the format X.XX, in the unit systems that corresponds to the Accept-Language header provided; required if user doesn't have an existing weight goal.

	*/
	Weight *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update weight goal params
func (o *UpdateWeightGoalParams) WithTimeout(timeout time.Duration) *UpdateWeightGoalParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update weight goal params
func (o *UpdateWeightGoalParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update weight goal params
func (o *UpdateWeightGoalParams) WithContext(ctx context.Context) *UpdateWeightGoalParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update weight goal params
func (o *UpdateWeightGoalParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update weight goal params
func (o *UpdateWeightGoalParams) WithHTTPClient(client *http.Client) *UpdateWeightGoalParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update weight goal params
func (o *UpdateWeightGoalParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStartDate adds the startDate to the update weight goal params
func (o *UpdateWeightGoalParams) WithStartDate(startDate string) *UpdateWeightGoalParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the update weight goal params
func (o *UpdateWeightGoalParams) SetStartDate(startDate string) {
	o.StartDate = startDate
}

// WithStartWeight adds the startWeight to the update weight goal params
func (o *UpdateWeightGoalParams) WithStartWeight(startWeight string) *UpdateWeightGoalParams {
	o.SetStartWeight(startWeight)
	return o
}

// SetStartWeight adds the startWeight to the update weight goal params
func (o *UpdateWeightGoalParams) SetStartWeight(startWeight string) {
	o.StartWeight = startWeight
}

// WithWeight adds the weight to the update weight goal params
func (o *UpdateWeightGoalParams) WithWeight(weight *string) *UpdateWeightGoalParams {
	o.SetWeight(weight)
	return o
}

// SetWeight adds the weight to the update weight goal params
func (o *UpdateWeightGoalParams) SetWeight(weight *string) {
	o.Weight = weight
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateWeightGoalParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param startDate
	qrStartDate := o.StartDate
	qStartDate := qrStartDate
	if qStartDate != "" {
		if err := r.SetQueryParam("startDate", qStartDate); err != nil {
			return err
		}
	}

	// query param startWeight
	qrStartWeight := o.StartWeight
	qStartWeight := qrStartWeight
	if qStartWeight != "" {
		if err := r.SetQueryParam("startWeight", qStartWeight); err != nil {
			return err
		}
	}

	if o.Weight != nil {

		// query param weight
		var qrWeight string
		if o.Weight != nil {
			qrWeight = *o.Weight
		}
		qWeight := qrWeight
		if qWeight != "" {
			if err := r.SetQueryParam("weight", qWeight); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
