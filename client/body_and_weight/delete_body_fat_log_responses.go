// Code generated by go-swagger; DO NOT EDIT.

package body_and_weight

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteBodyFatLogReader is a Reader for the DeleteBodyFatLog structure.
type DeleteBodyFatLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBodyFatLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteBodyFatLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewDeleteBodyFatLogNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteBodyFatLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteBodyFatLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteBodyFatLogOK creates a DeleteBodyFatLogOK with default headers values
func NewDeleteBodyFatLogOK() *DeleteBodyFatLogOK {
	return &DeleteBodyFatLogOK{}
}

/*DeleteBodyFatLogOK handles this case with default header values.

A successful request.
*/
type DeleteBodyFatLogOK struct {
}

func (o *DeleteBodyFatLogOK) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/body/log/fat/{body-fat-log-id}.json][%d] deleteBodyFatLogOK ", 200)
}

func (o *DeleteBodyFatLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBodyFatLogNoContent creates a DeleteBodyFatLogNoContent with default headers values
func NewDeleteBodyFatLogNoContent() *DeleteBodyFatLogNoContent {
	return &DeleteBodyFatLogNoContent{}
}

/*DeleteBodyFatLogNoContent handles this case with default header values.

The server successfully processed the request, but is not returning any content.
*/
type DeleteBodyFatLogNoContent struct {
}

func (o *DeleteBodyFatLogNoContent) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/body/log/fat/{body-fat-log-id}.json][%d] deleteBodyFatLogNoContent ", 204)
}

func (o *DeleteBodyFatLogNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBodyFatLogBadRequest creates a DeleteBodyFatLogBadRequest with default headers values
func NewDeleteBodyFatLogBadRequest() *DeleteBodyFatLogBadRequest {
	return &DeleteBodyFatLogBadRequest{}
}

/*DeleteBodyFatLogBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type DeleteBodyFatLogBadRequest struct {
}

func (o *DeleteBodyFatLogBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/body/log/fat/{body-fat-log-id}.json][%d] deleteBodyFatLogBadRequest ", 400)
}

func (o *DeleteBodyFatLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBodyFatLogUnauthorized creates a DeleteBodyFatLogUnauthorized with default headers values
func NewDeleteBodyFatLogUnauthorized() *DeleteBodyFatLogUnauthorized {
	return &DeleteBodyFatLogUnauthorized{}
}

/*DeleteBodyFatLogUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type DeleteBodyFatLogUnauthorized struct {
}

func (o *DeleteBodyFatLogUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/body/log/fat/{body-fat-log-id}.json][%d] deleteBodyFatLogUnauthorized ", 401)
}

func (o *DeleteBodyFatLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
