// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFoodsLocalesReader is a Reader for the GetFoodsLocales structure.
type GetFoodsLocalesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFoodsLocalesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFoodsLocalesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFoodsLocalesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFoodsLocalesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFoodsLocalesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFoodsLocalesOK creates a GetFoodsLocalesOK with default headers values
func NewGetFoodsLocalesOK() *GetFoodsLocalesOK {
	return &GetFoodsLocalesOK{}
}

/*GetFoodsLocalesOK handles this case with default header values.

Successful request.
*/
type GetFoodsLocalesOK struct {
}

func (o *GetFoodsLocalesOK) Error() string {
	return fmt.Sprintf("[GET /1/foods/locales.json][%d] getFoodsLocalesOK ", 200)
}

func (o *GetFoodsLocalesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsLocalesBadRequest creates a GetFoodsLocalesBadRequest with default headers values
func NewGetFoodsLocalesBadRequest() *GetFoodsLocalesBadRequest {
	return &GetFoodsLocalesBadRequest{}
}

/*GetFoodsLocalesBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetFoodsLocalesBadRequest struct {
}

func (o *GetFoodsLocalesBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/foods/locales.json][%d] getFoodsLocalesBadRequest ", 400)
}

func (o *GetFoodsLocalesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsLocalesUnauthorized creates a GetFoodsLocalesUnauthorized with default headers values
func NewGetFoodsLocalesUnauthorized() *GetFoodsLocalesUnauthorized {
	return &GetFoodsLocalesUnauthorized{}
}

/*GetFoodsLocalesUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetFoodsLocalesUnauthorized struct {
}

func (o *GetFoodsLocalesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/foods/locales.json][%d] getFoodsLocalesUnauthorized ", 401)
}

func (o *GetFoodsLocalesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsLocalesForbidden creates a GetFoodsLocalesForbidden with default headers values
func NewGetFoodsLocalesForbidden() *GetFoodsLocalesForbidden {
	return &GetFoodsLocalesForbidden{}
}

/*GetFoodsLocalesForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetFoodsLocalesForbidden struct {
}

func (o *GetFoodsLocalesForbidden) Error() string {
	return fmt.Sprintf("[GET /1/foods/locales.json][%d] getFoodsLocalesForbidden ", 403)
}

func (o *GetFoodsLocalesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
