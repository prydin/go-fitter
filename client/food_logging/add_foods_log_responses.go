// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddFoodsLogReader is a Reader for the AddFoodsLog structure.
type AddFoodsLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddFoodsLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddFoodsLogCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddFoodsLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAddFoodsLogUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddFoodsLogForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddFoodsLogCreated creates a AddFoodsLogCreated with default headers values
func NewAddFoodsLogCreated() *AddFoodsLogCreated {
	return &AddFoodsLogCreated{}
}

/*AddFoodsLogCreated handles this case with default header values.

The request has been fulfilled and resulted in a new resource being created.
*/
type AddFoodsLogCreated struct {
}

func (o *AddFoodsLogCreated) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods/log.json][%d] addFoodsLogCreated ", 201)
}

func (o *AddFoodsLogCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFoodsLogBadRequest creates a AddFoodsLogBadRequest with default headers values
func NewAddFoodsLogBadRequest() *AddFoodsLogBadRequest {
	return &AddFoodsLogBadRequest{}
}

/*AddFoodsLogBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type AddFoodsLogBadRequest struct {
}

func (o *AddFoodsLogBadRequest) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods/log.json][%d] addFoodsLogBadRequest ", 400)
}

func (o *AddFoodsLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFoodsLogUnauthorized creates a AddFoodsLogUnauthorized with default headers values
func NewAddFoodsLogUnauthorized() *AddFoodsLogUnauthorized {
	return &AddFoodsLogUnauthorized{}
}

/*AddFoodsLogUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type AddFoodsLogUnauthorized struct {
}

func (o *AddFoodsLogUnauthorized) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods/log.json][%d] addFoodsLogUnauthorized ", 401)
}

func (o *AddFoodsLogUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFoodsLogForbidden creates a AddFoodsLogForbidden with default headers values
func NewAddFoodsLogForbidden() *AddFoodsLogForbidden {
	return &AddFoodsLogForbidden{}
}

/*AddFoodsLogForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type AddFoodsLogForbidden struct {
}

func (o *AddFoodsLogForbidden) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods/log.json][%d] addFoodsLogForbidden ", 403)
}

func (o *AddFoodsLogForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
