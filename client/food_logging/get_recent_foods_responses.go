// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetRecentFoodsReader is a Reader for the GetRecentFoods structure.
type GetRecentFoodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecentFoodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRecentFoodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRecentFoodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRecentFoodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRecentFoodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRecentFoodsOK creates a GetRecentFoodsOK with default headers values
func NewGetRecentFoodsOK() *GetRecentFoodsOK {
	return &GetRecentFoodsOK{}
}

/*GetRecentFoodsOK handles this case with default header values.

Successful request.
*/
type GetRecentFoodsOK struct {
}

func (o *GetRecentFoodsOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/recent.json][%d] getRecentFoodsOK ", 200)
}

func (o *GetRecentFoodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRecentFoodsBadRequest creates a GetRecentFoodsBadRequest with default headers values
func NewGetRecentFoodsBadRequest() *GetRecentFoodsBadRequest {
	return &GetRecentFoodsBadRequest{}
}

/*GetRecentFoodsBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetRecentFoodsBadRequest struct {
}

func (o *GetRecentFoodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/recent.json][%d] getRecentFoodsBadRequest ", 400)
}

func (o *GetRecentFoodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRecentFoodsUnauthorized creates a GetRecentFoodsUnauthorized with default headers values
func NewGetRecentFoodsUnauthorized() *GetRecentFoodsUnauthorized {
	return &GetRecentFoodsUnauthorized{}
}

/*GetRecentFoodsUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetRecentFoodsUnauthorized struct {
}

func (o *GetRecentFoodsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/recent.json][%d] getRecentFoodsUnauthorized ", 401)
}

func (o *GetRecentFoodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRecentFoodsForbidden creates a GetRecentFoodsForbidden with default headers values
func NewGetRecentFoodsForbidden() *GetRecentFoodsForbidden {
	return &GetRecentFoodsForbidden{}
}

/*GetRecentFoodsForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetRecentFoodsForbidden struct {
}

func (o *GetRecentFoodsForbidden) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/recent.json][%d] getRecentFoodsForbidden ", 403)
}

func (o *GetRecentFoodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
