// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateMealReader is a Reader for the UpdateMeal structure.
type UpdateMealReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMealReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateMealOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUpdateMealBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewUpdateMealUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewUpdateMealForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateMealOK creates a UpdateMealOK with default headers values
func NewUpdateMealOK() *UpdateMealOK {
	return &UpdateMealOK{}
}

/*UpdateMealOK handles this case with default header values.

Successful request.
*/
type UpdateMealOK struct {
}

func (o *UpdateMealOK) Error() string {
	return fmt.Sprintf("[POST /1/user/-/meals/{meal-id}.json][%d] updateMealOK ", 200)
}

func (o *UpdateMealOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMealBadRequest creates a UpdateMealBadRequest with default headers values
func NewUpdateMealBadRequest() *UpdateMealBadRequest {
	return &UpdateMealBadRequest{}
}

/*UpdateMealBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type UpdateMealBadRequest struct {
}

func (o *UpdateMealBadRequest) Error() string {
	return fmt.Sprintf("[POST /1/user/-/meals/{meal-id}.json][%d] updateMealBadRequest ", 400)
}

func (o *UpdateMealBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMealUnauthorized creates a UpdateMealUnauthorized with default headers values
func NewUpdateMealUnauthorized() *UpdateMealUnauthorized {
	return &UpdateMealUnauthorized{}
}

/*UpdateMealUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type UpdateMealUnauthorized struct {
}

func (o *UpdateMealUnauthorized) Error() string {
	return fmt.Sprintf("[POST /1/user/-/meals/{meal-id}.json][%d] updateMealUnauthorized ", 401)
}

func (o *UpdateMealUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateMealForbidden creates a UpdateMealForbidden with default headers values
func NewUpdateMealForbidden() *UpdateMealForbidden {
	return &UpdateMealForbidden{}
}

/*UpdateMealForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type UpdateMealForbidden struct {
}

func (o *UpdateMealForbidden) Error() string {
	return fmt.Sprintf("[POST /1/user/-/meals/{meal-id}.json][%d] updateMealForbidden ", 403)
}

func (o *UpdateMealForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
