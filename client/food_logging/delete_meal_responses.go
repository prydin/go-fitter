// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteMealReader is a Reader for the DeleteMeal structure.
type DeleteMealReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMealReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteMealOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteMealBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteMealUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteMealForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteMealOK creates a DeleteMealOK with default headers values
func NewDeleteMealOK() *DeleteMealOK {
	return &DeleteMealOK{}
}

/*DeleteMealOK handles this case with default header values.

Successful request.
*/
type DeleteMealOK struct {
}

func (o *DeleteMealOK) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/meals/{meal-id}.json][%d] deleteMealOK ", 200)
}

func (o *DeleteMealOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMealBadRequest creates a DeleteMealBadRequest with default headers values
func NewDeleteMealBadRequest() *DeleteMealBadRequest {
	return &DeleteMealBadRequest{}
}

/*DeleteMealBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type DeleteMealBadRequest struct {
}

func (o *DeleteMealBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/meals/{meal-id}.json][%d] deleteMealBadRequest ", 400)
}

func (o *DeleteMealBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMealUnauthorized creates a DeleteMealUnauthorized with default headers values
func NewDeleteMealUnauthorized() *DeleteMealUnauthorized {
	return &DeleteMealUnauthorized{}
}

/*DeleteMealUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type DeleteMealUnauthorized struct {
}

func (o *DeleteMealUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/meals/{meal-id}.json][%d] deleteMealUnauthorized ", 401)
}

func (o *DeleteMealUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMealForbidden creates a DeleteMealForbidden with default headers values
func NewDeleteMealForbidden() *DeleteMealForbidden {
	return &DeleteMealForbidden{}
}

/*DeleteMealForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type DeleteMealForbidden struct {
}

func (o *DeleteMealForbidden) Error() string {
	return fmt.Sprintf("[DELETE /1/user/-/meals/{meal-id}.json][%d] deleteMealForbidden ", 403)
}

func (o *DeleteMealForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
