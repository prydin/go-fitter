// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFoodsUnitsReader is a Reader for the GetFoodsUnits structure.
type GetFoodsUnitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFoodsUnitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFoodsUnitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFoodsUnitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFoodsUnitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFoodsUnitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFoodsUnitsOK creates a GetFoodsUnitsOK with default headers values
func NewGetFoodsUnitsOK() *GetFoodsUnitsOK {
	return &GetFoodsUnitsOK{}
}

/*GetFoodsUnitsOK handles this case with default header values.

Successful request.
*/
type GetFoodsUnitsOK struct {
}

func (o *GetFoodsUnitsOK) Error() string {
	return fmt.Sprintf("[GET /1/foods/units.json][%d] getFoodsUnitsOK ", 200)
}

func (o *GetFoodsUnitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsUnitsBadRequest creates a GetFoodsUnitsBadRequest with default headers values
func NewGetFoodsUnitsBadRequest() *GetFoodsUnitsBadRequest {
	return &GetFoodsUnitsBadRequest{}
}

/*GetFoodsUnitsBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetFoodsUnitsBadRequest struct {
}

func (o *GetFoodsUnitsBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/foods/units.json][%d] getFoodsUnitsBadRequest ", 400)
}

func (o *GetFoodsUnitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsUnitsUnauthorized creates a GetFoodsUnitsUnauthorized with default headers values
func NewGetFoodsUnitsUnauthorized() *GetFoodsUnitsUnauthorized {
	return &GetFoodsUnitsUnauthorized{}
}

/*GetFoodsUnitsUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetFoodsUnitsUnauthorized struct {
}

func (o *GetFoodsUnitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/foods/units.json][%d] getFoodsUnitsUnauthorized ", 401)
}

func (o *GetFoodsUnitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsUnitsForbidden creates a GetFoodsUnitsForbidden with default headers values
func NewGetFoodsUnitsForbidden() *GetFoodsUnitsForbidden {
	return &GetFoodsUnitsForbidden{}
}

/*GetFoodsUnitsForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetFoodsUnitsForbidden struct {
}

func (o *GetFoodsUnitsForbidden) Error() string {
	return fmt.Sprintf("[GET /1/foods/units.json][%d] getFoodsUnitsForbidden ", 403)
}

func (o *GetFoodsUnitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
