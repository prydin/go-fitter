// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFrequentFoodsReader is a Reader for the GetFrequentFoods structure.
type GetFrequentFoodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFrequentFoodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFrequentFoodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFrequentFoodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFrequentFoodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFrequentFoodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFrequentFoodsOK creates a GetFrequentFoodsOK with default headers values
func NewGetFrequentFoodsOK() *GetFrequentFoodsOK {
	return &GetFrequentFoodsOK{}
}

/*GetFrequentFoodsOK handles this case with default header values.

Successful request.
*/
type GetFrequentFoodsOK struct {
}

func (o *GetFrequentFoodsOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/frequent.json][%d] getFrequentFoodsOK ", 200)
}

func (o *GetFrequentFoodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFrequentFoodsBadRequest creates a GetFrequentFoodsBadRequest with default headers values
func NewGetFrequentFoodsBadRequest() *GetFrequentFoodsBadRequest {
	return &GetFrequentFoodsBadRequest{}
}

/*GetFrequentFoodsBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetFrequentFoodsBadRequest struct {
}

func (o *GetFrequentFoodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/frequent.json][%d] getFrequentFoodsBadRequest ", 400)
}

func (o *GetFrequentFoodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFrequentFoodsUnauthorized creates a GetFrequentFoodsUnauthorized with default headers values
func NewGetFrequentFoodsUnauthorized() *GetFrequentFoodsUnauthorized {
	return &GetFrequentFoodsUnauthorized{}
}

/*GetFrequentFoodsUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetFrequentFoodsUnauthorized struct {
}

func (o *GetFrequentFoodsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/frequent.json][%d] getFrequentFoodsUnauthorized ", 401)
}

func (o *GetFrequentFoodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFrequentFoodsForbidden creates a GetFrequentFoodsForbidden with default headers values
func NewGetFrequentFoodsForbidden() *GetFrequentFoodsForbidden {
	return &GetFrequentFoodsForbidden{}
}

/*GetFrequentFoodsForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetFrequentFoodsForbidden struct {
}

func (o *GetFrequentFoodsForbidden) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/frequent.json][%d] getFrequentFoodsForbidden ", 403)
}

func (o *GetFrequentFoodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
