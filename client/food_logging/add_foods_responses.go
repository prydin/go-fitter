// Code generated by go-swagger; DO NOT EDIT.

package food_logging

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddFoodsReader is a Reader for the AddFoods structure.
type AddFoodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddFoodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddFoodsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddFoodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAddFoodsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAddFoodsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddFoodsCreated creates a AddFoodsCreated with default headers values
func NewAddFoodsCreated() *AddFoodsCreated {
	return &AddFoodsCreated{}
}

/*AddFoodsCreated handles this case with default header values.

The request has been fulfilled and resulted in a new resource being created.
*/
type AddFoodsCreated struct {
}

func (o *AddFoodsCreated) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods.json][%d] addFoodsCreated ", 201)
}

func (o *AddFoodsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFoodsBadRequest creates a AddFoodsBadRequest with default headers values
func NewAddFoodsBadRequest() *AddFoodsBadRequest {
	return &AddFoodsBadRequest{}
}

/*AddFoodsBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type AddFoodsBadRequest struct {
}

func (o *AddFoodsBadRequest) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods.json][%d] addFoodsBadRequest ", 400)
}

func (o *AddFoodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFoodsUnauthorized creates a AddFoodsUnauthorized with default headers values
func NewAddFoodsUnauthorized() *AddFoodsUnauthorized {
	return &AddFoodsUnauthorized{}
}

/*AddFoodsUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type AddFoodsUnauthorized struct {
}

func (o *AddFoodsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods.json][%d] addFoodsUnauthorized ", 401)
}

func (o *AddFoodsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddFoodsForbidden creates a AddFoodsForbidden with default headers values
func NewAddFoodsForbidden() *AddFoodsForbidden {
	return &AddFoodsForbidden{}
}

/*AddFoodsForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type AddFoodsForbidden struct {
}

func (o *AddFoodsForbidden) Error() string {
	return fmt.Sprintf("[POST /1/user/-/foods.json][%d] addFoodsForbidden ", 403)
}

func (o *AddFoodsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
