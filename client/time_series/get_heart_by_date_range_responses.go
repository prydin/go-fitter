// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetHeartByDateRangeReader is a Reader for the GetHeartByDateRange structure.
type GetHeartByDateRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHeartByDateRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetHeartByDateRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetHeartByDateRangeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetHeartByDateRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetHeartByDateRangeOK creates a GetHeartByDateRangeOK with default headers values
func NewGetHeartByDateRangeOK() *GetHeartByDateRangeOK {
	return &GetHeartByDateRangeOK{}
}

/*GetHeartByDateRangeOK handles this case with default header values.

Successful request.
*/
type GetHeartByDateRangeOK struct {
}

func (o *GetHeartByDateRangeOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/heart/date/{base-date}/{end-date}.json][%d] getHeartByDateRangeOK ", 200)
}

func (o *GetHeartByDateRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHeartByDateRangeUnauthorized creates a GetHeartByDateRangeUnauthorized with default headers values
func NewGetHeartByDateRangeUnauthorized() *GetHeartByDateRangeUnauthorized {
	return &GetHeartByDateRangeUnauthorized{}
}

/*GetHeartByDateRangeUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetHeartByDateRangeUnauthorized struct {
}

func (o *GetHeartByDateRangeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/heart/date/{base-date}/{end-date}.json][%d] getHeartByDateRangeUnauthorized ", 401)
}

func (o *GetHeartByDateRangeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHeartByDateRangeForbidden creates a GetHeartByDateRangeForbidden with default headers values
func NewGetHeartByDateRangeForbidden() *GetHeartByDateRangeForbidden {
	return &GetHeartByDateRangeForbidden{}
}

/*GetHeartByDateRangeForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetHeartByDateRangeForbidden struct {
}

func (o *GetHeartByDateRangeForbidden) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/heart/date/{base-date}/{end-date}.json][%d] getHeartByDateRangeForbidden ", 403)
}

func (o *GetHeartByDateRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
