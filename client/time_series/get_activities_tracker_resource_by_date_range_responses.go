// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetActivitiesTrackerResourceByDateRangeReader is a Reader for the GetActivitiesTrackerResourceByDateRange structure.
type GetActivitiesTrackerResourceByDateRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivitiesTrackerResourceByDateRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivitiesTrackerResourceByDateRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetActivitiesTrackerResourceByDateRangeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetActivitiesTrackerResourceByDateRangeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetActivitiesTrackerResourceByDateRangeConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivitiesTrackerResourceByDateRangeOK creates a GetActivitiesTrackerResourceByDateRangeOK with default headers values
func NewGetActivitiesTrackerResourceByDateRangeOK() *GetActivitiesTrackerResourceByDateRangeOK {
	return &GetActivitiesTrackerResourceByDateRangeOK{}
}

/*GetActivitiesTrackerResourceByDateRangeOK handles this case with default header values.

A successful request.
*/
type GetActivitiesTrackerResourceByDateRangeOK struct {
}

func (o *GetActivitiesTrackerResourceByDateRangeOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{base-date}/{end-date}.json][%d] getActivitiesTrackerResourceByDateRangeOK ", 200)
}

func (o *GetActivitiesTrackerResourceByDateRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTrackerResourceByDateRangeBadRequest creates a GetActivitiesTrackerResourceByDateRangeBadRequest with default headers values
func NewGetActivitiesTrackerResourceByDateRangeBadRequest() *GetActivitiesTrackerResourceByDateRangeBadRequest {
	return &GetActivitiesTrackerResourceByDateRangeBadRequest{}
}

/*GetActivitiesTrackerResourceByDateRangeBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetActivitiesTrackerResourceByDateRangeBadRequest struct {
}

func (o *GetActivitiesTrackerResourceByDateRangeBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{base-date}/{end-date}.json][%d] getActivitiesTrackerResourceByDateRangeBadRequest ", 400)
}

func (o *GetActivitiesTrackerResourceByDateRangeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTrackerResourceByDateRangeUnauthorized creates a GetActivitiesTrackerResourceByDateRangeUnauthorized with default headers values
func NewGetActivitiesTrackerResourceByDateRangeUnauthorized() *GetActivitiesTrackerResourceByDateRangeUnauthorized {
	return &GetActivitiesTrackerResourceByDateRangeUnauthorized{}
}

/*GetActivitiesTrackerResourceByDateRangeUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetActivitiesTrackerResourceByDateRangeUnauthorized struct {
}

func (o *GetActivitiesTrackerResourceByDateRangeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{base-date}/{end-date}.json][%d] getActivitiesTrackerResourceByDateRangeUnauthorized ", 401)
}

func (o *GetActivitiesTrackerResourceByDateRangeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTrackerResourceByDateRangeConflict creates a GetActivitiesTrackerResourceByDateRangeConflict with default headers values
func NewGetActivitiesTrackerResourceByDateRangeConflict() *GetActivitiesTrackerResourceByDateRangeConflict {
	return &GetActivitiesTrackerResourceByDateRangeConflict{}
}

/*GetActivitiesTrackerResourceByDateRangeConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetActivitiesTrackerResourceByDateRangeConflict struct {
}

func (o *GetActivitiesTrackerResourceByDateRangeConflict) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{base-date}/{end-date}.json][%d] getActivitiesTrackerResourceByDateRangeConflict ", 409)
}

func (o *GetActivitiesTrackerResourceByDateRangeConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
