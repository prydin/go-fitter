// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFoodsByDateRangeReader is a Reader for the GetFoodsByDateRange structure.
type GetFoodsByDateRangeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFoodsByDateRangeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFoodsByDateRangeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFoodsByDateRangeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFoodsByDateRangeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFoodsByDateRangeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFoodsByDateRangeOK creates a GetFoodsByDateRangeOK with default headers values
func NewGetFoodsByDateRangeOK() *GetFoodsByDateRangeOK {
	return &GetFoodsByDateRangeOK{}
}

/*GetFoodsByDateRangeOK handles this case with default header values.

A successful request.
*/
type GetFoodsByDateRangeOK struct {
}

func (o *GetFoodsByDateRangeOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{base-date}/{end-date}.json][%d] getFoodsByDateRangeOK ", 200)
}

func (o *GetFoodsByDateRangeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsByDateRangeBadRequest creates a GetFoodsByDateRangeBadRequest with default headers values
func NewGetFoodsByDateRangeBadRequest() *GetFoodsByDateRangeBadRequest {
	return &GetFoodsByDateRangeBadRequest{}
}

/*GetFoodsByDateRangeBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetFoodsByDateRangeBadRequest struct {
}

func (o *GetFoodsByDateRangeBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{base-date}/{end-date}.json][%d] getFoodsByDateRangeBadRequest ", 400)
}

func (o *GetFoodsByDateRangeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsByDateRangeUnauthorized creates a GetFoodsByDateRangeUnauthorized with default headers values
func NewGetFoodsByDateRangeUnauthorized() *GetFoodsByDateRangeUnauthorized {
	return &GetFoodsByDateRangeUnauthorized{}
}

/*GetFoodsByDateRangeUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetFoodsByDateRangeUnauthorized struct {
}

func (o *GetFoodsByDateRangeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{base-date}/{end-date}.json][%d] getFoodsByDateRangeUnauthorized ", 401)
}

func (o *GetFoodsByDateRangeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsByDateRangeForbidden creates a GetFoodsByDateRangeForbidden with default headers values
func NewGetFoodsByDateRangeForbidden() *GetFoodsByDateRangeForbidden {
	return &GetFoodsByDateRangeForbidden{}
}

/*GetFoodsByDateRangeForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetFoodsByDateRangeForbidden struct {
}

func (o *GetFoodsByDateRangeForbidden) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{base-date}/{end-date}.json][%d] getFoodsByDateRangeForbidden ", 403)
}

func (o *GetFoodsByDateRangeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
