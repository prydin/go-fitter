// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetFoodsResourceByDatePeriodReader is a Reader for the GetFoodsResourceByDatePeriod structure.
type GetFoodsResourceByDatePeriodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFoodsResourceByDatePeriodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFoodsResourceByDatePeriodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFoodsResourceByDatePeriodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFoodsResourceByDatePeriodUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFoodsResourceByDatePeriodForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFoodsResourceByDatePeriodOK creates a GetFoodsResourceByDatePeriodOK with default headers values
func NewGetFoodsResourceByDatePeriodOK() *GetFoodsResourceByDatePeriodOK {
	return &GetFoodsResourceByDatePeriodOK{}
}

/*GetFoodsResourceByDatePeriodOK handles this case with default header values.

A successful request.
*/
type GetFoodsResourceByDatePeriodOK struct {
}

func (o *GetFoodsResourceByDatePeriodOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{date}/{period}.json][%d] getFoodsResourceByDatePeriodOK ", 200)
}

func (o *GetFoodsResourceByDatePeriodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsResourceByDatePeriodBadRequest creates a GetFoodsResourceByDatePeriodBadRequest with default headers values
func NewGetFoodsResourceByDatePeriodBadRequest() *GetFoodsResourceByDatePeriodBadRequest {
	return &GetFoodsResourceByDatePeriodBadRequest{}
}

/*GetFoodsResourceByDatePeriodBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetFoodsResourceByDatePeriodBadRequest struct {
}

func (o *GetFoodsResourceByDatePeriodBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{date}/{period}.json][%d] getFoodsResourceByDatePeriodBadRequest ", 400)
}

func (o *GetFoodsResourceByDatePeriodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsResourceByDatePeriodUnauthorized creates a GetFoodsResourceByDatePeriodUnauthorized with default headers values
func NewGetFoodsResourceByDatePeriodUnauthorized() *GetFoodsResourceByDatePeriodUnauthorized {
	return &GetFoodsResourceByDatePeriodUnauthorized{}
}

/*GetFoodsResourceByDatePeriodUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetFoodsResourceByDatePeriodUnauthorized struct {
}

func (o *GetFoodsResourceByDatePeriodUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{date}/{period}.json][%d] getFoodsResourceByDatePeriodUnauthorized ", 401)
}

func (o *GetFoodsResourceByDatePeriodUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFoodsResourceByDatePeriodForbidden creates a GetFoodsResourceByDatePeriodForbidden with default headers values
func NewGetFoodsResourceByDatePeriodForbidden() *GetFoodsResourceByDatePeriodForbidden {
	return &GetFoodsResourceByDatePeriodForbidden{}
}

/*GetFoodsResourceByDatePeriodForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetFoodsResourceByDatePeriodForbidden struct {
}

func (o *GetFoodsResourceByDatePeriodForbidden) Error() string {
	return fmt.Sprintf("[GET /1/user/-/foods/log/{resource-path}/date/{date}/{period}.json][%d] getFoodsResourceByDatePeriodForbidden ", 403)
}

func (o *GetFoodsResourceByDatePeriodForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
