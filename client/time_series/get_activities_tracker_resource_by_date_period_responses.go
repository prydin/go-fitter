// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetActivitiesTrackerResourceByDatePeriodReader is a Reader for the GetActivitiesTrackerResourceByDatePeriod structure.
type GetActivitiesTrackerResourceByDatePeriodReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActivitiesTrackerResourceByDatePeriodReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetActivitiesTrackerResourceByDatePeriodOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetActivitiesTrackerResourceByDatePeriodBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetActivitiesTrackerResourceByDatePeriodUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetActivitiesTrackerResourceByDatePeriodConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetActivitiesTrackerResourceByDatePeriodOK creates a GetActivitiesTrackerResourceByDatePeriodOK with default headers values
func NewGetActivitiesTrackerResourceByDatePeriodOK() *GetActivitiesTrackerResourceByDatePeriodOK {
	return &GetActivitiesTrackerResourceByDatePeriodOK{}
}

/*GetActivitiesTrackerResourceByDatePeriodOK handles this case with default header values.

A successful request.
*/
type GetActivitiesTrackerResourceByDatePeriodOK struct {
}

func (o *GetActivitiesTrackerResourceByDatePeriodOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{date}/{period}.json][%d] getActivitiesTrackerResourceByDatePeriodOK ", 200)
}

func (o *GetActivitiesTrackerResourceByDatePeriodOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTrackerResourceByDatePeriodBadRequest creates a GetActivitiesTrackerResourceByDatePeriodBadRequest with default headers values
func NewGetActivitiesTrackerResourceByDatePeriodBadRequest() *GetActivitiesTrackerResourceByDatePeriodBadRequest {
	return &GetActivitiesTrackerResourceByDatePeriodBadRequest{}
}

/*GetActivitiesTrackerResourceByDatePeriodBadRequest handles this case with default header values.

The request had bad syntax or was inherently impossible to be satified.
*/
type GetActivitiesTrackerResourceByDatePeriodBadRequest struct {
}

func (o *GetActivitiesTrackerResourceByDatePeriodBadRequest) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{date}/{period}.json][%d] getActivitiesTrackerResourceByDatePeriodBadRequest ", 400)
}

func (o *GetActivitiesTrackerResourceByDatePeriodBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTrackerResourceByDatePeriodUnauthorized creates a GetActivitiesTrackerResourceByDatePeriodUnauthorized with default headers values
func NewGetActivitiesTrackerResourceByDatePeriodUnauthorized() *GetActivitiesTrackerResourceByDatePeriodUnauthorized {
	return &GetActivitiesTrackerResourceByDatePeriodUnauthorized{}
}

/*GetActivitiesTrackerResourceByDatePeriodUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetActivitiesTrackerResourceByDatePeriodUnauthorized struct {
}

func (o *GetActivitiesTrackerResourceByDatePeriodUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{date}/{period}.json][%d] getActivitiesTrackerResourceByDatePeriodUnauthorized ", 401)
}

func (o *GetActivitiesTrackerResourceByDatePeriodUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActivitiesTrackerResourceByDatePeriodConflict creates a GetActivitiesTrackerResourceByDatePeriodConflict with default headers values
func NewGetActivitiesTrackerResourceByDatePeriodConflict() *GetActivitiesTrackerResourceByDatePeriodConflict {
	return &GetActivitiesTrackerResourceByDatePeriodConflict{}
}

/*GetActivitiesTrackerResourceByDatePeriodConflict handles this case with default header values.

Returned if the given user is already subscribed to this stream using a different subscription ID, OR if the given subscription ID is already used to identify a subscription to a different stream.
*/
type GetActivitiesTrackerResourceByDatePeriodConflict struct {
}

func (o *GetActivitiesTrackerResourceByDatePeriodConflict) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/tracker/{resource-path}/date/{date}/{period}.json][%d] getActivitiesTrackerResourceByDatePeriodConflict ", 409)
}

func (o *GetActivitiesTrackerResourceByDatePeriodConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
