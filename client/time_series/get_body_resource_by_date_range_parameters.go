// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetBodyResourceByDateRangeParams creates a new GetBodyResourceByDateRangeParams object
// with the default values initialized.
func NewGetBodyResourceByDateRangeParams() *GetBodyResourceByDateRangeParams {
	var (
		resourcePathDefault = string("weight")
	)
	return &GetBodyResourceByDateRangeParams{
		ResourcePath: resourcePathDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetBodyResourceByDateRangeParamsWithTimeout creates a new GetBodyResourceByDateRangeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetBodyResourceByDateRangeParamsWithTimeout(timeout time.Duration) *GetBodyResourceByDateRangeParams {
	var (
		resourcePathDefault = string("weight")
	)
	return &GetBodyResourceByDateRangeParams{
		ResourcePath: resourcePathDefault,

		timeout: timeout,
	}
}

// NewGetBodyResourceByDateRangeParamsWithContext creates a new GetBodyResourceByDateRangeParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetBodyResourceByDateRangeParamsWithContext(ctx context.Context) *GetBodyResourceByDateRangeParams {
	var (
		resourcePathDefault = string("weight")
	)
	return &GetBodyResourceByDateRangeParams{
		ResourcePath: resourcePathDefault,

		Context: ctx,
	}
}

// NewGetBodyResourceByDateRangeParamsWithHTTPClient creates a new GetBodyResourceByDateRangeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetBodyResourceByDateRangeParamsWithHTTPClient(client *http.Client) *GetBodyResourceByDateRangeParams {
	var (
		resourcePathDefault = string("weight")
	)
	return &GetBodyResourceByDateRangeParams{
		ResourcePath: resourcePathDefault,
		HTTPClient:   client,
	}
}

/*GetBodyResourceByDateRangeParams contains all the parameters to send to the API endpoint
for the get body resource by date range operation typically these are written to a http.Request
*/
type GetBodyResourceByDateRangeParams struct {

	/*BaseDate
	  The range start date in the format yyyy-MM-dd or today.

	*/
	BaseDate strfmt.Date
	/*EndDate
	  The end date of the range.

	*/
	EndDate strfmt.Date
	/*ResourcePath
	  The resource path, which incudes the bmi, fat, or weight options.

	*/
	ResourcePath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) WithTimeout(timeout time.Duration) *GetBodyResourceByDateRangeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) WithContext(ctx context.Context) *GetBodyResourceByDateRangeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) WithHTTPClient(client *http.Client) *GetBodyResourceByDateRangeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseDate adds the baseDate to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) WithBaseDate(baseDate strfmt.Date) *GetBodyResourceByDateRangeParams {
	o.SetBaseDate(baseDate)
	return o
}

// SetBaseDate adds the baseDate to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) SetBaseDate(baseDate strfmt.Date) {
	o.BaseDate = baseDate
}

// WithEndDate adds the endDate to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) WithEndDate(endDate strfmt.Date) *GetBodyResourceByDateRangeParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) SetEndDate(endDate strfmt.Date) {
	o.EndDate = endDate
}

// WithResourcePath adds the resourcePath to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) WithResourcePath(resourcePath string) *GetBodyResourceByDateRangeParams {
	o.SetResourcePath(resourcePath)
	return o
}

// SetResourcePath adds the resourcePath to the get body resource by date range params
func (o *GetBodyResourceByDateRangeParams) SetResourcePath(resourcePath string) {
	o.ResourcePath = resourcePath
}

// WriteToRequest writes these params to a swagger request
func (o *GetBodyResourceByDateRangeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param base-date
	if err := r.SetPathParam("base-date", o.BaseDate.String()); err != nil {
		return err
	}

	// path param end-date
	if err := r.SetPathParam("end-date", o.EndDate.String()); err != nil {
		return err
	}

	// path param resource-path
	if err := r.SetPathParam("resource-path", o.ResourcePath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
