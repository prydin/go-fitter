// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetActivitiesTrackerResourceByDatePeriodParams creates a new GetActivitiesTrackerResourceByDatePeriodParams object
// with the default values initialized.
func NewGetActivitiesTrackerResourceByDatePeriodParams() *GetActivitiesTrackerResourceByDatePeriodParams {
	var (
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesTrackerResourceByDatePeriodParams{
		ResourcePath: resourcePathDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetActivitiesTrackerResourceByDatePeriodParamsWithTimeout creates a new GetActivitiesTrackerResourceByDatePeriodParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetActivitiesTrackerResourceByDatePeriodParamsWithTimeout(timeout time.Duration) *GetActivitiesTrackerResourceByDatePeriodParams {
	var (
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesTrackerResourceByDatePeriodParams{
		ResourcePath: resourcePathDefault,

		timeout: timeout,
	}
}

// NewGetActivitiesTrackerResourceByDatePeriodParamsWithContext creates a new GetActivitiesTrackerResourceByDatePeriodParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetActivitiesTrackerResourceByDatePeriodParamsWithContext(ctx context.Context) *GetActivitiesTrackerResourceByDatePeriodParams {
	var (
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesTrackerResourceByDatePeriodParams{
		ResourcePath: resourcePathDefault,

		Context: ctx,
	}
}

// NewGetActivitiesTrackerResourceByDatePeriodParamsWithHTTPClient creates a new GetActivitiesTrackerResourceByDatePeriodParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetActivitiesTrackerResourceByDatePeriodParamsWithHTTPClient(client *http.Client) *GetActivitiesTrackerResourceByDatePeriodParams {
	var (
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesTrackerResourceByDatePeriodParams{
		ResourcePath: resourcePathDefault,
		HTTPClient:   client,
	}
}

/*GetActivitiesTrackerResourceByDatePeriodParams contains all the parameters to send to the API endpoint
for the get activities tracker resource by date period operation typically these are written to a http.Request
*/
type GetActivitiesTrackerResourceByDatePeriodParams struct {

	/*Date
	  The end date of the period specified in the format yyyy-MM-dd or today.

	*/
	Date strfmt.Date
	/*Period
	  The range for which data will be returned. Options are 1d, 7d, 30d, 1w, 1m, 3m, 6m, 1y, or max.

	*/
	Period string
	/*ResourcePath
	  The resource-path; see options in the Resource Path Options section in the full documentation.

	*/
	ResourcePath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WithTimeout(timeout time.Duration) *GetActivitiesTrackerResourceByDatePeriodParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WithContext(ctx context.Context) *GetActivitiesTrackerResourceByDatePeriodParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WithHTTPClient(client *http.Client) *GetActivitiesTrackerResourceByDatePeriodParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDate adds the date to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WithDate(date strfmt.Date) *GetActivitiesTrackerResourceByDatePeriodParams {
	o.SetDate(date)
	return o
}

// SetDate adds the date to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) SetDate(date strfmt.Date) {
	o.Date = date
}

// WithPeriod adds the period to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WithPeriod(period string) *GetActivitiesTrackerResourceByDatePeriodParams {
	o.SetPeriod(period)
	return o
}

// SetPeriod adds the period to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) SetPeriod(period string) {
	o.Period = period
}

// WithResourcePath adds the resourcePath to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WithResourcePath(resourcePath string) *GetActivitiesTrackerResourceByDatePeriodParams {
	o.SetResourcePath(resourcePath)
	return o
}

// SetResourcePath adds the resourcePath to the get activities tracker resource by date period params
func (o *GetActivitiesTrackerResourceByDatePeriodParams) SetResourcePath(resourcePath string) {
	o.ResourcePath = resourcePath
}

// WriteToRequest writes these params to a swagger request
func (o *GetActivitiesTrackerResourceByDatePeriodParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param date
	if err := r.SetPathParam("date", o.Date.String()); err != nil {
		return err
	}

	// path param period
	if err := r.SetPathParam("period", o.Period); err != nil {
		return err
	}

	// path param resource-path
	if err := r.SetPathParam("resource-path", o.ResourcePath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
