// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetActivitiesResourceByDateRangeIntradayParams creates a new GetActivitiesResourceByDateRangeIntradayParams object
// with the default values initialized.
func NewGetActivitiesResourceByDateRangeIntradayParams() *GetActivitiesResourceByDateRangeIntradayParams {
	var (
		detailLevelDefault  = string("1min")
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesResourceByDateRangeIntradayParams{
		DetailLevel:  detailLevelDefault,
		ResourcePath: resourcePathDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetActivitiesResourceByDateRangeIntradayParamsWithTimeout creates a new GetActivitiesResourceByDateRangeIntradayParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetActivitiesResourceByDateRangeIntradayParamsWithTimeout(timeout time.Duration) *GetActivitiesResourceByDateRangeIntradayParams {
	var (
		detailLevelDefault  = string("1min")
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesResourceByDateRangeIntradayParams{
		DetailLevel:  detailLevelDefault,
		ResourcePath: resourcePathDefault,

		timeout: timeout,
	}
}

// NewGetActivitiesResourceByDateRangeIntradayParamsWithContext creates a new GetActivitiesResourceByDateRangeIntradayParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetActivitiesResourceByDateRangeIntradayParamsWithContext(ctx context.Context) *GetActivitiesResourceByDateRangeIntradayParams {
	var (
		detailLevelDefault  = string("1min")
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesResourceByDateRangeIntradayParams{
		DetailLevel:  detailLevelDefault,
		ResourcePath: resourcePathDefault,

		Context: ctx,
	}
}

// NewGetActivitiesResourceByDateRangeIntradayParamsWithHTTPClient creates a new GetActivitiesResourceByDateRangeIntradayParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetActivitiesResourceByDateRangeIntradayParamsWithHTTPClient(client *http.Client) *GetActivitiesResourceByDateRangeIntradayParams {
	var (
		detailLevelDefault  = string("1min")
		resourcePathDefault = string("steps")
	)
	return &GetActivitiesResourceByDateRangeIntradayParams{
		DetailLevel:  detailLevelDefault,
		ResourcePath: resourcePathDefault,
		HTTPClient:   client,
	}
}

/*GetActivitiesResourceByDateRangeIntradayParams contains all the parameters to send to the API endpoint
for the get activities resource by date range intraday operation typically these are written to a http.Request
*/
type GetActivitiesResourceByDateRangeIntradayParams struct {

	/*BaseDate
	  The date in the format yyyy-MM-dd or today.

	*/
	BaseDate strfmt.Date
	/*DetailLevel
	  Number of data points to include. Either 1min or 15min. Optional.

	*/
	DetailLevel string
	/*EndDate
	  The date in the format yyyy-MM-dd or today.

	*/
	EndDate strfmt.Date
	/*ResourcePath
	  The resource-path; see options in the Resource Path Options section in the full documentation.

	*/
	ResourcePath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithTimeout(timeout time.Duration) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithContext(ctx context.Context) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithHTTPClient(client *http.Client) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBaseDate adds the baseDate to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithBaseDate(baseDate strfmt.Date) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetBaseDate(baseDate)
	return o
}

// SetBaseDate adds the baseDate to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetBaseDate(baseDate strfmt.Date) {
	o.BaseDate = baseDate
}

// WithDetailLevel adds the detailLevel to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithDetailLevel(detailLevel string) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetDetailLevel(detailLevel)
	return o
}

// SetDetailLevel adds the detailLevel to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetDetailLevel(detailLevel string) {
	o.DetailLevel = detailLevel
}

// WithEndDate adds the endDate to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithEndDate(endDate strfmt.Date) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetEndDate(endDate strfmt.Date) {
	o.EndDate = endDate
}

// WithResourcePath adds the resourcePath to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) WithResourcePath(resourcePath string) *GetActivitiesResourceByDateRangeIntradayParams {
	o.SetResourcePath(resourcePath)
	return o
}

// SetResourcePath adds the resourcePath to the get activities resource by date range intraday params
func (o *GetActivitiesResourceByDateRangeIntradayParams) SetResourcePath(resourcePath string) {
	o.ResourcePath = resourcePath
}

// WriteToRequest writes these params to a swagger request
func (o *GetActivitiesResourceByDateRangeIntradayParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param base-date
	if err := r.SetPathParam("base-date", o.BaseDate.String()); err != nil {
		return err
	}

	// path param detail-level
	if err := r.SetPathParam("detail-level", o.DetailLevel); err != nil {
		return err
	}

	// path param end-date
	if err := r.SetPathParam("end-date", o.EndDate.String()); err != nil {
		return err
	}

	// path param resource-path
	if err := r.SetPathParam("resource-path", o.ResourcePath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
