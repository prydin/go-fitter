// Code generated by go-swagger; DO NOT EDIT.

package time_series

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetHeartByDateRangeTimestampIntradayReader is a Reader for the GetHeartByDateRangeTimestampIntraday structure.
type GetHeartByDateRangeTimestampIntradayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetHeartByDateRangeTimestampIntradayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetHeartByDateRangeTimestampIntradayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetHeartByDateRangeTimestampIntradayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetHeartByDateRangeTimestampIntradayForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetHeartByDateRangeTimestampIntradayOK creates a GetHeartByDateRangeTimestampIntradayOK with default headers values
func NewGetHeartByDateRangeTimestampIntradayOK() *GetHeartByDateRangeTimestampIntradayOK {
	return &GetHeartByDateRangeTimestampIntradayOK{}
}

/*GetHeartByDateRangeTimestampIntradayOK handles this case with default header values.

Successful request.
*/
type GetHeartByDateRangeTimestampIntradayOK struct {
}

func (o *GetHeartByDateRangeTimestampIntradayOK) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json][%d] getHeartByDateRangeTimestampIntradayOK ", 200)
}

func (o *GetHeartByDateRangeTimestampIntradayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHeartByDateRangeTimestampIntradayUnauthorized creates a GetHeartByDateRangeTimestampIntradayUnauthorized with default headers values
func NewGetHeartByDateRangeTimestampIntradayUnauthorized() *GetHeartByDateRangeTimestampIntradayUnauthorized {
	return &GetHeartByDateRangeTimestampIntradayUnauthorized{}
}

/*GetHeartByDateRangeTimestampIntradayUnauthorized handles this case with default header values.

The request requires user authentication.
*/
type GetHeartByDateRangeTimestampIntradayUnauthorized struct {
}

func (o *GetHeartByDateRangeTimestampIntradayUnauthorized) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json][%d] getHeartByDateRangeTimestampIntradayUnauthorized ", 401)
}

func (o *GetHeartByDateRangeTimestampIntradayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetHeartByDateRangeTimestampIntradayForbidden creates a GetHeartByDateRangeTimestampIntradayForbidden with default headers values
func NewGetHeartByDateRangeTimestampIntradayForbidden() *GetHeartByDateRangeTimestampIntradayForbidden {
	return &GetHeartByDateRangeTimestampIntradayForbidden{}
}

/*GetHeartByDateRangeTimestampIntradayForbidden handles this case with default header values.

The server understood the request, but is refusing to fulfill it.
*/
type GetHeartByDateRangeTimestampIntradayForbidden struct {
}

func (o *GetHeartByDateRangeTimestampIntradayForbidden) Error() string {
	return fmt.Sprintf("[GET /1/user/-/activities/heart/date/{date}/{end-date}/{detail-level}/time/{start-time}/{end-time}.json][%d] getHeartByDateRangeTimestampIntradayForbidden ", 403)
}

func (o *GetHeartByDateRangeTimestampIntradayForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
